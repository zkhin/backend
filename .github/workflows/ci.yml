name: Continuous Integration
on: [push, pull_request]
jobs:

  real-auth-pytest:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_XRAY_SDK_ENABLED: false
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - name: Git checkout
      uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install Poetry
      uses: snok/install-poetry@v1.1.6
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: load-cached-venv
      uses: actions/cache@v2
      with:
        path: real-auth/.venv
        key: venv-${{ runner.os }}-${{ hashFiles('real-auth/poetry.lock') }}

    - name: Install python packages
      if: steps.load-cached-venv.outputs.cache-hit != 'true'
      working-directory: real-auth
      run: poetry install --no-interaction --no-root

    - name: Test with pytest
      working-directory: real-auth
      run: poetry run pytest tests

  real-main-pytest:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_XRAY_SDK_ENABLED: false
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - name: Git checkout
      uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install Poetry
      uses: snok/install-poetry@v1.1.6
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: load-cached-venv
      uses: actions/cache@v2
      with:
        path: real-main/.venv
        key: venv-${{ runner.os }}-${{ hashFiles('real-main/poetry.lock') }}

    - name: Install python packages
      if: steps.load-cached-venv.outputs.cache-hit != 'true'
      working-directory: real-main
      run: poetry install --no-interaction --no-root

    - name: Test with pytest
      working-directory: real-main
      run: poetry run pytest -n auto app_tests migrations_tests

    - name: Archive test coverage results
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: real-main/htmlcov

  python-lint:
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install python lint tools
      run: |
        pip install 'black~=21.5b1' 'flake8~=3.9.2' 'flake8-bugbear~=21.4.3' 'isort~=5.8.0' 'pylint~=2.8.2'

    - name: Lint real-auth
      working-directory: real-auth
      run: |
        black --check --diff .
        isort --check --diff .
        flake8 .
        pylint real_auth tests

    - name: Lint real-cloudfront
      working-directory: real-cloudfront
      run: |
        black --check --diff .
        isort --check --diff .
        flake8 .
        pylint edge_app

    - name: Lint real-main
      working-directory: real-main
      run: |
        black --check --diff .
        isort --check --diff .
        flake8 .
        pylint app app_tests migrations migrations_tests

  javascript-lint:
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v1

    - name: Set up Node 14.X
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    - name: Load cached node packages
      uses: actions/cache@v2
      with:
        path: 'integration-testing/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('integration-testing/yarn.lock') }}

    - name: Install node packages
      working-directory: integration-testing
      run: yarn install

    - name: Lint with eslint
      working-directory: integration-testing
      run: yarn run lint
